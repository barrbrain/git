#!/bin/bash
set -o pipefail
set -e

die () {
	printf >&2 'fatal: %s\n' "$*"
	exit 128
}

usage () {
	printf >&2 'usage: %s\n' "$*"
	exit 129
}

svnrdump_wrap () {
	exec 6<&1 &&

	EX=$(
		(svnrdump dump --non-interactive --username=Guest --password= \
			--quiet "$1" "$2" >&6) 2>&1; test $? -ne 0 || echo Success
	) &&
	if test "z$EX" != "zSuccess"; then
		if test "z$EX" = "zLOWER cannot be greater than UPPER."; then
			return 0
		fi
		echo "$EX" >&2
		return 1
	fi
}

try_svnrdump () {
	command -v svnrdump >/dev/null &&
	echo svnrdump_wrap ||
	true
}

svnadmin_wrap () {
	path=${1##file://} &&
	test "z$path" != "z$1" &&
	latest=$(svnlook youngest "$path") &&
	future=$(( $latest + 1 )) &&
	asked=${2#-r} &&
	asked=${asked%:*} &&
	test "$asked" -eq "$future" ||
	svnadmin dump --incremental --deltas --quiet "$path" "$2"
}

try_svnadmin () {
	command -v svnadmin >/dev/null &&
	command -v svnlook >/dev/null &&
	echo svnadmin_wrap ||
	true
}

SVNDUMP=""
SVNDUMP=${SVNDUMP:-`try_svnrdump`}
SVNDUMP=${SVNDUMP:-`try_svnadmin`}
test -n "$SVNDUMP" || die "neither svnrdump nor svnadmin & svnlook was found"

do_import () {
	revs=$1 url=$2
	(eval "$SVNDUMP \"$url\" -r\"$revs\"" |	svn-fe) 3<&0 || die "FAILURE"
	exec 1>&-
}

test "${2+set}" ||
usage 'git remote-svn-alpha <repository> <URL> < commandlist'
repo=$1
url=$2
need_import=""

while read -r cmd args
do
	case $cmd in
	capabilities)
		echo import
		echo "refspec HEAD:refs/heads/master"
		echo "refspec refs/heads/master:refs/heads/master"
		echo
		;;
	list)
		echo '? HEAD'
		echo '? refs/heads/master'
		echo
		;;
	import)
		test "$args" = "HEAD" || test "$args" = "refs/heads/master" ||
		die "remote-svn-alpha: unsupported import ref argument: $args"
		need_import="yes"
		;;
	'')
		test "$need_import" = "yes" || exit 0
		do_import 0:HEAD "$url"
		need_import=""
		;;
	*)
		die "remote-svn-alpha: unsupported command: $cmd $args"
	esac
done
